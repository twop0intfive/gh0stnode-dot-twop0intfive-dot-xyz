name: Deploy and Backup Jekyll Site

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'  # Ensure Ruby 3.1 or newer is used
      
      - name: Install dependencies
        run: |
          gem install bundler
          bundle install

      - name: Build the site
        run: bundle exec jekyll build

    # DISCORD NOTIFY - INITIAL BUILD COMPLETE
      - name: Send Discord notification
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" -d \
          '{"content": "üëª gh0stnode.twop0intfive.xyz | Initial build complete. Deploying..."}' \
          $WEBHOOK_URL

    # DEPLOY TO AWS
      - name: Deploy to S3 (Public Hosting)
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_PUBLIC_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: './_site'

    # DISCORD NOTIFY - S3 PRIMARY
      - name: Send Discord notification
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" -d \
          '{"content": "‚úîÔ∏è Deployment to primary S3 bucket successful!"}' \
          $WEBHOOK_URL

    #  - name: List S3 (Private Backup) Bucket Contents
    #    run: aws s3 ls s3://gh0stnode-aws-backup/
    #    env:
    #      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # DEPLOY TO AWS BACKUP BUCKET
    #  - name: Backup to S3 (Private Backup)
    #    run: aws s3 sync ./_site s3://gh0stnode-aws-backup/ --acl private --delete --debug
    #    env:
    #      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # DISCORD NOTIFY - S3 PRIMARY
    #  - name: Send Discord notification
    #    env:
    #      WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    #    run: |
    #      curl -H "Content-Type: application/json" -d \
    #      '{"content": "‚úîÔ∏è Deployment to backup S3 bucket successful!"}' \
    #      $WEBHOOK_URL

    # DEPLOY TO GCS 
    #  - name: Backup to Google Cloud Storage
    #    run: |
    #      echo ${{ secrets.GCS_KEY }} | base64 --decode > ${{ secrets.GCS_KEY_FILE }}
    #      gsutil -m rsync -r ./_site gs://gh0stnode-gcs-backup/
    #    env:
    #      GCS_KEY: ${{ secrets.GCS_KEY }}
    #      GCS_KEY_FILE: 'gcs-key.json'

    # DISCORD NOTIFY - S3 PRIMARY
    #  - name: Send Discord notification
    #    env:
    #      WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
    #    run: |
    #      curl -H "Content-Type: application/json" -d \
    #      '{"content": "‚úîÔ∏è Deployment to backup S3 bucket successful!"}' \
    #      $WEBHOOK_URL

    # DISCORD NOTIFY - ALL JOBS COMPLETE
      - name: Send Discord notification
        env:
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          curl -H "Content-Type: application/json" -d \
          '{"content": "‚úÖ New blog post deployed to primary S3 successfully, but get backups working!"}' \
          $WEBHOOK_URL
